#!/bin/sh

# General sintax
# exco e <archives> | exco c <archive-name> <files>

extract() {
    ext="${1##*.}"
    if [ "$ext" = "tar" ]
    then
        tar xvf "$1"
    elif [ "$ext" = "bz2" ]
    then
        bzip2 -d -v "$1"
    elif [ "$ext" = "gz" ]
    then
        gzip -d -v "$1"
    elif [ "$ext" = "7z" ]
    then
        7z x "$1"
    elif [ "$ext" = "rar" ]
    then
        unrar x "$1"
    else
        echo "The extension $ext is not supported."
    fi
}

create() {
    ext="${1##*.}"
    if [ "$ext" = "tar" ]
    then
        tar cvf "$1" "${@:2}"
    elif [ "$ext" = "bz2" ]
    then
        if [ "$#" -gt 2 ]
        then
            echo "You can only compress one file at a time"
        else
            bzip2 -c -z -9 -v "$2" > "$1"
        fi
    elif [ "$ext" = "gz" ]
    then
        if [ "$#" -gt 2 ]
        then
            echo "You can only compress one file at a time"
        else
            gzip -c -9 -v "$2" > "$1"
        fi
    elif [ "$ext" = "7z" ]
    then
        7z a "$1" "${@:2}"
    elif [ "$ext" = "rar" ]
    then
        rar a "$1" "${@:2}"
    else
        echo "The extension $ext is not supported."
    fi
}

if [ "$1" = "e" ]
then
    for i in "${@:2}"
    do
        if [ "$i" != "e" ]
        then
            extract "$i"
        fi
    done
elif [ "$1" = "c" ]
then
    create "${@:2}"
else
    echo """
    There's only two options: e and c.
    e is for extraction, for example:
    exco e file.tar
    c is for creation, for example:
    exco c archive.tar file.png file.txt
    """
fi
